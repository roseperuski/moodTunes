{"version":3,"sources":["./src/environments/environment.ts","./src/app/music.service.ts","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/dialog/dialog.component.ts","./src/app/dialog/dialog.component.html","./src/app/search-music/search-music.component.ts","./src/app/search-music/search-music.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/playlists/playlists.component.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {Music} from './music'\nimport {Track} from './track'\n\ninterface Response {\n  toptracks?: Music;\n  tracks?: Music;\n  results?:Music;\n  topartists?: Music;\n  //page: number;\n}\n\n// interface TrackResponse {\n//   songResults: Track[];\n// }\n\n\n//interface Music{\n// type?:string;\n ///name?:string;\n //tag_en:string;\n//}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicService {\n  apiKey = \"b88d365cdf804155ac40618e402f7ce5\";\n  //url = \"http://localhost:8080/api/V6\";\n  url=\"http://ws.audioscrobbler.com/2.0/\";\n  music: Music;\n  musicArray: Music [];\n\n  //public apiUrl: string = \"http://localhost:3000/api\";\n  public apiUrl: string = \"/api\";\n  selectedSearch: string=\"\";\n\n  constructor(private http: HttpClient) { }\n  \n  getMusicLanding(){\n    const requestUrl =  this.url + \"?method=chart.gettoptracks&api_key=\" + this.apiKey +\"&format=json\"\n    this.http.get(requestUrl).subscribe(\n      (response: Response) => {\n        console.log(response);\n        this.music = response.tracks;\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  getMusic(method?: string, searchString?: string){\n    let requestUrl;\n    if (method === \"artist.gettoptracks\"){\n      requestUrl = this.url +\"?method=\"+ method +   \"&artist=\" + searchString + \"&api_key=b88d365cdf804155ac40618e402f7ce5&format=json\";\n      this.http.get(requestUrl).subscribe(\n        (response: Response) => {\n          console.log(response);\n          this.music = response.toptracks;\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n    } else if (method === \"track.search\" ) {\n      requestUrl = this.url +\"?method=\"+ method + \"&track=\" + searchString + \"&api_key=b88d365cdf804155ac40618e402f7ce5&format=json\";\n      this.http.get(requestUrl).subscribe(\n        (response: Response) => {\n          console.log(response);\n          this.music = response.results;\n          console.log(this.music.trackmatches);\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n    } else {\n      requestUrl =\n      this.url+\"?method=\" + method + \"&tag=\" + searchString + \"&api_key=b88d365cdf804155ac40618e402f7ce5&format=json\";\n      console.log('requestURL:',requestUrl);\n         \n      if (method === \"tag.gettoptracks\"){\n        this.http.get(requestUrl).subscribe(\n          (response: Response) => {\n            console.log(response);\n            this.music = response.tracks;\n          },\n          (error) => {\n            console.error(error);\n          }\n        );\n\n      } else {\n        this.http.get(requestUrl).subscribe(\n          (response: Response) => {\n            console.log(response);\n            this.music = response.topartists;\n          },\n          (error) => {\n            console.error(error);\n          }\n        );\n      }\n    }\n    //console.log(type);\n   \n    // this.http.get(requestUrl).subscribe(\n    //   (response: Response) => {\n    //     console.log(response);\n    //     this.music = response.toptracks;\n    //   },\n    //   (error) => {\n    //     console.error(error);\n    //   }\n    // );\n  }\n\n  getTracks(): void {\n    \n    this.musicArray = [];\n    // Make an API request to our Animal Crossings API\n    // Set the response of that request to our this.villagers array\n    this.http\n      .get(this.apiUrl) // calling the API\n      .subscribe(\n        // subscribing to run our functions when the data returns\n        (data) => {\n          console.log('myfavorite:',data);\n          // this is what happens on success\n          // convert object to an array\n          for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n              const playList = data[key]; // individual villager\n\n              // converting the format of the API to the format\n              // that we are expecting in our Villager interface\n              // villager.name = villager.name[\"name-USen\"];\n\n              this.musicArray.push(playList);\n              console.log(this.musicArray);\n            }\n          }\n        },\n        (error) => {\n          // this is what happens on failure\n          console.error(error);\n        }\n      );\n  }\n\n  \n  setSelectedSearch(tag: string){\n    this.selectedSearch=tag;\n    console.log(this.selectedSearch);\n  }\n\n  getSelectedSearch(){\n    console.log(\"Selected search is \" + this.selectedSearch);\n    return this.selectedSearch;\n  }\n  // getUrlWithAPIKey() {\n    //return `${this.url}?api_key=${this.apiKey}&language=en-US`;\n    //return `${this.url}?api_key=${this.apiKey}&language=en-US`;\n  //   return `${this.url}?method=${method}?app_key=${this.apiKey}&format=json`;\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Music } from '../music';\nimport { MusicService } from '../music.service';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor(public musicService: MusicService) { }\n  \n  ngOnInit(): void {\n    this.musicService.getMusicLanding();\n  }\n\n}\n","<p>landing works!</p>\n<h1>Top Tracks</h1>\n<app-card></app-card>","import { Component, Input, OnInit } from '@angular/core';\nimport { Music } from '../music';\nimport { MusicService } from '../music.service';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent implements OnInit {\n  @Input() public music: Music;\n\n  constructor(public musicService: MusicService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <app-nav></app-nav> -->\n<main>\n\n  <!-- <h2>My Results</h2>\n    <div class=\"artist\">Artist Name: {{ musicService.music['@attr'].artist}}</div> \n    <div class =\"result-card\" *ngFor=\"let music of musicService.music.track; let i= index;\">  \n  \n      <div class=\"song\">Song: {{ music.name }}</div> \n\n      <img [src]=\"music.image[1]['#text']\" alt=\"music.url\" />\n\n      <button>Details</button>\n      <button>Add to Playlist</button> -->\n      <!-- <button id=\"add_btn\" (click)=\"addPlaylist()\"><img src=\"https://img.icons8.com/officel/16/000000/like--v2.png\"/></button> -->\n\n    <!-- </div> -->\n\n    <app-card></app-card>\n</main>\n\n<!-- <a href=\"https://icons8.com/icon/lGwdk0g8m4H5/heart\" (click)=\"addPlaylist(music)\">Heart icon by Icons8</a> -->\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'moodTunes';\n}\n","<!-- <app-search-music></app-search-music> -->\n<!-- <app-results></app-results> -->\n<app-nav></app-nav>\n<!-- <app-landing></app-landing> -->\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <app-nav></app-nav> -->\n<h1>My Profile</h1>\n<p>profile works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { SearchMusicComponent } from './search-music/search-music.component';\nimport { NavComponent } from './nav/nav.component';\nimport { ResultsComponent } from './results/results.component';\nimport { PlaylistsComponent } from './playlists/playlists.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LoginComponent } from './login/login.component'\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CardComponent } from './card/card.component'\nimport {MatCardModule} from '@angular/material/card';\nimport { LandingComponent } from './landing/landing.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {matDialogAnimations, MatDialogModule} from '@angular/material/dialog';\nimport { DialogComponent } from './dialog/dialog.component';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchMusicComponent,\n    NavComponent,\n    ResultsComponent,\n    PlaylistsComponent,\n    ProfileComponent,\n    LoginComponent,\n    CardComponent,\n    LandingComponent,\n    DialogComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    \n\n  ],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n  \n  ngOnInit(): void {\n  }\n\n}\n\n","<h2 mat-dialog-title>Dialog with elements</h2>\n<div mat-dialog-content>This dialog showcases the title, close, content and actions elements.</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Close</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MusicService } from '../music.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatFormFieldControl} from '@angular/material/form-field';\ninterface SearchBy {\n  value: string;\n  viewValue: string;\n}\n\n\n@Component({\n  selector: 'app-search-music',\n  templateUrl: './search-music.component.html',\n  styleUrls: ['./search-music.component.css'],\n  providers: [\n    { provide: MatFormFieldControl, useExisting: SearchMusicComponent }   \n  ]\n})\n\nexport class SearchMusicComponent implements OnInit {\n\n\n  selectedSearch: string;\n  \n  searches: SearchBy[] = [\n    {value: 'tag.gettoptracks', viewValue: 'Tracks by Mood'},\n    {value: 'tag.gettopartists', viewValue: 'Artists by Mood'},\n    {value: 'artist.gettoptracks', viewValue: 'Artist'},\n    {value: 'track.search', viewValue: 'Track'}\n  ];\n  //selectedSearch=this.searches[0].value;\n  \n  searchTerm: string;\n  //selectedFilter: string =\"\";\n  constructor(public musicService: MusicService) { }\n\n  ngOnInit(): void {\n    //this.musicService.getMusic();\n  }\n\n  fetchDataService(){\n    const term = this.searchTerm;\n    console.log(\"this is the term \" + term)\n    this.musicService.getMusic(this.selectedSearch, this.searchTerm);\n    this.musicService.setSelectedSearch(this.selectedSearch);\n  }\n\n  // onOptionsSelected(event: any){\n  //   this.selectedFilter=event.target.value;\n  //   console.log(this.selectedFilter);\n  // }\n  // selectSearch(event: Event) {\n  //   this.selectedSearch = (event.target as HTMLSelectElement).value;\n  // }\n  \n\n}\n","<!-- <app-nav></app-nav> -->\n<!-- <main>\n  <div>\n    <form role=\"search\">\n      <div class=\"select\">\n \n        <h2 id=\"search-by\">Search by:</h2>\n        <select name=\"search-type\" aria-labelledby=\"search-by\"  (change)=\"onOptionsSelected($event)\" required>\n          <option value=\"tag.gettoptracks\">Mood by Track</option>\n          <option value=\"tag.gettopartists\">Mood by Artist</option>\n          <option value=\"artist.gettoptracks\">Artist</option>\n          <option value=\"track.search\">Track</option>\n        </select>\n      </div>\n      <label\n        >Search terms:\n        <input type=\"text\" required />\n      </label>\n    </form>\n    <button type=\"submit\" class=\"search-btn\" (click)=\"fetchDataService()\" routerLink=\"/results\">Search</button>\n  </div>\n</main> -->\n<main>\n  <div>\n    <form role=\"search\">\n      <h1 id=\"search-by\">Search by:</h1>\n        <select aria-labelledby=\"search-by\" matNativeControl [(ngModel)]=\"selectedSearch\" name=\"search\">\n          <option value=\"\" selected></option>\n          <option *ngFor=\"let search of searches\" [value]=\"search.value\">\n            {{ search.viewValue }}\n          </option>\n        </select>\n      \n  \n      <label\n        >Search Terms:\n        <input type=\"text\" name=\"searchTerm\" [(ngModel)]=\"searchTerm\" required />\n      </label>\n      <button (click)=\"fetchDataService()\" routerLink=\"/results\">Search</button>\n    </form>\n  </div>\n  <p>Selected search: {{ selectedSearch }}</p>\n</main>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  menuOpen: boolean=false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  closeMenu() {\n    this.menuOpen=false;\n  }\n}\n","<header>\n    <a routerLink=\"\" ><img id=\"logo-words\" src=\"/assets/moodTunesNB.png\" alt=\"Moodtunes home\"></a>\n\n    <nav role=\"navigation\">\n\n        <ul class=\"top-menu\">\n            <!-- <li class=\"nav-link\"><a routerLink=\"/login\">Log in or Sign up</a></li>\n            <li class=\"nav-link\"><a routerLink=\"/profile\">My Profile</a></li>\n            <li class=\"nav-link\"><a routerLink=\"/playlists\">My Playlists</a></li> -->\n            <li><a routerLink=\"/login\">Log in or Sign up</a></li>\n            <li><a routerLink=\"/profile\">My Profile</a></li>\n            <li><a routerLink=\"/playlists\">My Playlists</a></li>\n    </ul>\n\n        <div id=\"menuToggle\">\n            <input type=\"checkbox\" [(ngModel)]=\"menuOpen\" />\n          \n            <span></span>\n            <span></span>\n            <span></span>\n          \n            <ul id=\"menu\">\n                <!-- <li class=\"nav-link\"><a routerLink=\"/login\">Log in or Sign up</a></li>\n                <li class=\"nav-link\"><a routerLink=\"/profile\">My Profile</a></li>\n                <li class=\"nav-link\"><a routerLink=\"/playlists\">My Playlists</a></li> -->\n               <li><a (click)=\"closeMenu()\" routerLink=\"/login\">Log in or Sign up</a></li> \n                <li><a (click)=\"closeMenu()\" routerLink=\"/profile\">My Profile</a></li>\n               <li><a (click)=\"closeMenu()\" routerLink=\"/playlists\">My Playlists</a></li> \n            </ul>\n        </div>\n    </nav>\n</header>\n    ","import { Component, OnInit, Input } from '@angular/core';\nimport { Music } from '../music';\nimport { MusicService } from '../music.service';\n\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n  @Input() public music: Music;\n  @Input() selectedSearch: string;\n\n  constructor(public musicService: MusicService) { }\n  \n  moodTrack: boolean = false;\n  showTrack: boolean = false;\n  moodArtist: boolean = false;\n\n  ngOnInit(): void {\n    this.selectedSearch = this.musicService.getSelectedSearch();\n    this.setSearchShow(this.selectedSearch);\n  }\n \n  addPlaylist(music: Music){\n\n  this.musicService.getTracks(); \n  \n  }\n   \n  setSearchShow(search : string){\n    search = this.selectedSearch;\n    if (search === \"tag.gettoptracks\"){\n      this.moodTrack = true;\n    } else if (search === \"tag.gettopartists\") {\n      this.moodArtist = true;\n    } else if (search===\"track.search\"){\n      this.showTrack = true;\n    } else {\n      this.moodTrack = true;\n    }\n\n    console.log (\"tag:\", this.selectedSearch)\n  }\n\n}\n","<section *ngIf=\"moodTrack\">\n  <!-- mood by track working-->\n  <mat-card\n    \n    role=\"group\"\n    aria-label=\"search results\"\n    class=\"result-card\"\n    *ngFor=\"let music of musicService.music.track; let i = index\"\n  >\n    <mat-card-header>\n      <h2 mat-card-title>{{ music.name }}</h2>\n      <!-- <mat-card-subtitle> {{music.artist}} </mat-card-subtitle> -->\n      <!-- <mat-card-subtitle> {{music.artist.name}} </mat-card-subtitle> -->\n    </mat-card-header>\n    <img mat-card-image src=\"\" alt=\"\" />\n    <mat-card-content></mat-card-content>\n    <mat-card-actions>\n      <!-- TO DO: this should be a link to the last FM site -->\n      <!-- <button mat-stroked-button (click)=\"openDialog()\" attr.aria-label=\"Details for {{ music.name }} by {{music.artist.name}}  \">Details </button>\n                <button mat-fab attr.aria-label=\"Add {{ music.name }} by {{music.artist.name}} to playlist\" (click)=\"addPlaylist(music)\">\n                    <mat-icon>favorite</mat-icon>\n                  </button> -->\n    </mat-card-actions>\n  </mat-card>\n\n</section>\n  <!-- start of showTrack -->\n  <section *ngIf=\"showTrack\">\n  <mat-card\n    role=\"group\"\n    aria-label=\"search results\"\n    class=\"result-card\"\n    *ngFor=\"let music of musicService.music.trackmatches.track; let i = index\"\n  >\n    <mat-card-header>\n      <h2 mat-card-title>{{ music.name }}</h2>\n      <!-- <mat-card-subtitle> {{music.artist}} </mat-card-subtitle> -->\n      <!-- <mat-card-subtitle> {{music.artist.name}} </mat-card-subtitle> -->\n    </mat-card-header>\n    <img mat-card-image src=\"\" alt=\"\" />\n    <mat-card-content></mat-card-content>\n    <mat-card-actions>\n      <!-- TO DO: this should be a link to the last FM site -->\n      <!-- <button mat-stroked-button (click)=\"openDialog()\" attr.aria-label=\"Details for {{ music.name }} by {{music.artist.name}}  \">Details </button>\n                <button mat-fab attr.aria-label=\"Add {{ music.name }} by {{music.artist.name}} to playlist\" (click)=\"addPlaylist(music)\">\n                    <mat-icon>favorite</mat-icon>\n                  </button> -->\n    </mat-card-actions>\n  </mat-card>\n\n</section>\n  <!-- start of artist by mood working-->\n  <section *ngIf=\"moodArtist\">\n  <mat-card\n    \n    role=\"group\"\n    aria-label=\"search results\"\n    class=\"result-card\"\n    *ngFor=\"let music of musicService.music.artist; let i = index\"\n  >\n    <mat-card-header>\n      <h2 mat-card-title>{{ music.name }}</h2>\n      <!-- <mat-card-subtitle> {{music.artist}} </mat-card-subtitle> -->\n      <!-- <mat-card-subtitle> {{music.artist.name}} </mat-card-subtitle> -->\n    </mat-card-header>\n    <img mat-card-image src=\"\" alt=\"\" />\n    <mat-card-content></mat-card-content>\n    <mat-card-actions>\n      <!-- TO DO: this should be a link to the last FM site -->\n      <!-- <button mat-stroked-button (click)=\"openDialog()\" attr.aria-label=\"Details for {{ music.name }} by {{music.artist.name}}  \">Details </button>\n            <button mat-fab attr.aria-label=\"Add {{ music.name }} by {{music.artist.name}} to playlist\" (click)=\"addPlaylist(music)\">\n                <mat-icon>favorite</mat-icon>\n              </button> -->\n    </mat-card-actions>\n  </mat-card>\n</section>\n"," \nimport { Component, OnInit,Input } from '@angular/core';\nimport { Music } from '../music';\nimport { MusicService } from '../music.service';\n\n@Component({\n  selector: 'app-playlists',\n  templateUrl: './playlists.component.html',\n  styleUrls: ['./playlists.component.css']\n})\nexport class PlaylistsComponent implements OnInit {\n    @Input() public music: Music;\n\n  constructor(public musicService:MusicService) { }\n\n  ngOnInit(): void {\n        this.musicService.getTracks(); \n        }\n  \n\n//   removeFromPlayList(deleteIndex: number) {\n//     console.log(deleteIndex);\n//     this.musicService.musiclist.splice(deleteIndex, 1);\n//     console.log(this.musicService);\n//   }\n\n//   selectedMusic(playlistEntry: Music) {\n//     console.log('musicArtist:', playlistEntry.artist_display_name);\n//     playlistEntry.isShowing = !playlistEntry.isShowing;\n//     return playlistEntry.artist_display_name;\n//   }\n\n   \n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchMusicComponent } from './search-music/search-music.component';\nimport { ResultsComponent } from './results/results.component';\nimport { PlaylistsComponent } from './playlists/playlists.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  { path: '', component: SearchMusicComponent },\n  { path: 'results', component: ResultsComponent },\n  { path: 'playlists', component: PlaylistsComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile', component: ProfileComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <app-nav></app-nav> -->\n<p>login works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}